apiVersion: batch/v1
kind: Job
metadata:
  name: free5gc-subscriber-job
spec:
  template:
    spec:
      initContainers:
      - name: wait-for-webui
        image: badouralix/curl-jq:latest
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for webui to come up first"
          until curl -sSf http://free5gc-webui:5000; do 
            echo "waiting for webui to come up first"
            sleep 2
          done
      containers:
      - name: subscriber-creator
        image: badouralix/curl-jq:latest
        command: ["/bin/sh", "-c"]
        args:
        - |          
          # Get auth token
          TOKEN=$(curl -s -X POST http://free5gc-webui:5000/api/login \
            -H "Content-Type: application/json" \
            -d '{"username":"admin", "password":"free5gc"}' | jq -r .access_token)
          
          # Exit if token is empty
          if [ -z "$TOKEN" ]; then
            echo "Failed to get authentication token"
            exit 1
          fi
          
          # Function to create subscriber
          create_subscriber() {
            local imsi=$1
            local opcValue=$2
            local plmnID=$3
            local sequenceNumber=$4
            local permanentKeyValue=$5
            local msisdn=$6
            local sst=$7
            local sd=$8
            local uplink=$9
            local downlink=${10}
            local dnn=${11}
            
            # Check if IMSI already has the prefix
            if [[ $imsi == imsi-* ]]; then
              formatted_imsi=$imsi
              imsi_value=${imsi#imsi-}  # Remove the prefix for URL
            else
              formatted_imsi="imsi-$imsi"
              imsi_value=$imsi
            fi
            
            echo "Creating subscriber with IMSI: $formatted_imsi"
            
            # Create well-formatted JSON
            JSON_DATA="{\"plmnID\":\"$plmnID\",\"ueId\":\"$formatted_imsi\",\"AuthenticationSubscription\":{\"authenticationManagementField\":\"8000\",\"authenticationMethod\":\"5G_AKA\",\"opc\":{\"encryptionAlgorithm\":0,\"encryptionKey\":0,\"opcValue\":\"$opcValue\"},\"permanentKey\":{\"encryptionAlgorithm\":0,\"encryptionKey\":0,\"permanentKeyValue\":\"$permanentKeyValue\"},\"sequenceNumber\":\"$sequenceNumber\"},\"AccessAndMobilitySubscriptionData\":{\"gpsis\":[\"msisdn-$msisdn\"],\"nssai\":{\"defaultSingleNssais\":[{\"sst\":$sst,\"sd\":\"$sd\",\"isDefault\":true}],\"singleNssais\":[]},\"subscribedUeAmbr\":{\"uplink\":\"$uplink\",\"downlink\":\"$downlink\"}},\"SessionManagementSubscriptionData\":[{\"singleNssai\":{\"sst\":$sst,\"sd\":\"$sd\"},\"dnnConfigurations\":{\"$dnn\":{\"sscModes\":{\"defaultSscMode\":\"SSC_MODE_1\",\"allowedSscModes\":[\"SSC_MODE_2\",\"SSC_MODE_3\"]},\"pduSessionTypes\":{\"defaultSessionType\":\"IPV4\",\"allowedSessionTypes\":[\"IPV4\"]},\"sessionAmbr\":{\"uplink\":\"$uplink\",\"downlink\":\"$downlink\"},\"5gQosProfile\":{\"5qi\":8,\"arp\":{\"priorityLevel\":8},\"priorityLevel\":8}}}}],\"SmfSelectionSubscriptionData\":{\"subscribedSnssaiInfos\":{\"0$sst$sd\":{\"dnnInfos\":[{\"dnn\":\"$dnn\"}]}}},\"AmPolicyData\":{\"subscCats\":[\"free5gc\"]},\"SmPolicyData\":{\"smPolicySnssaiData\":{\"0$sst$sd\":{\"snssai\":{\"sst\":$sst,\"sd\":\"$sd\"},\"smPolicyDnnData\":{\"$dnn\":{\"dnn\":\"$dnn\"}}}}},\"QosFlows\":[{\"qfi\":8,\"5qi\":8,\"snssai\":\"0$sst$sd\",\"dnn\":\"$dnn\"}]}"
            
            # Save to file to avoid command line length issues
            echo "$JSON_DATA" > /tmp/subscriber.json
            
            # Send the request using the file
            curl -X POST "http://free5gc-webui:5000/api/subscriber/$formatted_imsi/$plmnID" \
              -H "Content-Type: application/json" \
              -H "Token: $TOKEN" \
              -d @/tmp/subscriber.json
            
            echo "Subscriber $formatted_imsi creation completed"
          }
          
          # Create subscribers from the list
          {{- range .Values.subscribers }}
          create_subscriber "{{ .imsi }}" "{{ .opcValue }}" "{{ .plmnID }}" "{{ .sequenceNumber }}" "{{ .permanentKeyValue }}" "{{ .msisdn }}" {{ .sst }} "{{ .sd }}" "{{ .uplink }}" "{{ .downlink }}" "{{ .dnn }}"
          {{- end }}
          
          # List all subscribers
          echo "Listing all subscribers:"
          curl -s -X GET http://free5gc-webui:5000/api/subscriber \
            -H "Content-Type: application/json" \
            -H "Token: $TOKEN" | jq
      restartPolicy: OnFailure